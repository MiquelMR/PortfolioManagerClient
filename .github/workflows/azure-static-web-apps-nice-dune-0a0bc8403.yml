name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Step to install .NET SDK
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      # Step to restore .NET dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Step to build your Blazor WebAssembly app
      - name: Build the Blazor WebAssembly app
        run: dotnet publish -c Release -o ./wwwroot  # Publish Blazor app to wwwroot

      # Clean up unnecessary files (Remove files you don't need to deploy)
      - name: Clean up unnecessary files
        run: |
          rm -rf ./wwwroot/node_modules
          rm -rf ./wwwroot/.git
          rm -rf ./wwwroot/**/*.log
          # Add any other clean-up commands necessary for your app

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string

      # Deployment step to upload the built Blazor app
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_NICE_DUNE_0A0BC8403 }}
          action: "upload"
          app_location: "/"  # App source code path (root of the repo)
          api_location: ""   # API source code path (empty if not used)
          output_location: "wwwroot"  # Deploy only the contents of the wwwroot folder
          github_id_token: ${{ steps.idtoken.outputs.result }}
          app_build_command: ""

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
